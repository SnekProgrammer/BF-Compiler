; Brainfuck x86-64 Assembly (UNIX)
; Generated by BFCompiler
;
; Tape size: 30000b

section .bss
    tape resb 30000

section .text
global _start

_start:
    mov rsi, tape
    ; Input to current cell
    mov rax, 0        ; sys_read
    mov rdi, 0        ; stdin
    mov rdx, 1        ; count
    syscall
    ; Loop start
loop_start_0:
    cmp byte [rsi], 0
    je loop_end_0
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_1:
    cmp byte [rsi], 0
    je loop_end_1
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_2:
    cmp byte [rsi], 0
    je loop_end_2
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_3:
    cmp byte [rsi], 0
    je loop_end_3
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_4:
    cmp byte [rsi], 0
    je loop_end_4
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_5:
    cmp byte [rsi], 0
    je loop_end_5
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_6:
    cmp byte [rsi], 0
    je loop_end_6
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_7:
    cmp byte [rsi], 0
    je loop_end_7
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_8:
    cmp byte [rsi], 0
    je loop_end_8
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_9:
    cmp byte [rsi], 0
    je loop_end_9
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_10:
    cmp byte [rsi], 0
    je loop_end_10
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_11:
    cmp byte [rsi], 0
    je loop_end_11
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_12:
    cmp byte [rsi], 0
    je loop_end_12
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_13:
    cmp byte [rsi], 0
    je loop_end_13
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_14:
    cmp byte [rsi], 0
    je loop_end_14
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_15:
    cmp byte [rsi], 0
    je loop_end_15
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_16:
    cmp byte [rsi], 0
    je loop_end_16
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_17:
    cmp byte [rsi], 0
    je loop_end_17
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_18:
    cmp byte [rsi], 0
    je loop_end_18
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_19:
    cmp byte [rsi], 0
    je loop_end_19
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_20:
    cmp byte [rsi], 0
    je loop_end_20
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_21:
    cmp byte [rsi], 0
    je loop_end_21
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_22:
    cmp byte [rsi], 0
    je loop_end_22
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_23:
    cmp byte [rsi], 0
    je loop_end_23
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_24:
    cmp byte [rsi], 0
    je loop_end_24
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_25:
    cmp byte [rsi], 0
    je loop_end_25
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_26:
    cmp byte [rsi], 0
    je loop_end_26
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_27:
    cmp byte [rsi], 0
    je loop_end_27
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_28:
    cmp byte [rsi], 0
    je loop_end_28
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_29:
    cmp byte [rsi], 0
    je loop_end_29
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_30:
    cmp byte [rsi], 0
    je loop_end_30
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_31:
    cmp byte [rsi], 0
    je loop_end_31
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_32:
    cmp byte [rsi], 0
    je loop_end_32
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_33:
    cmp byte [rsi], 0
    je loop_end_33
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_34:
    cmp byte [rsi], 0
    je loop_end_34
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_35:
    cmp byte [rsi], 0
    je loop_end_35
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_36:
    cmp byte [rsi], 0
    je loop_end_36
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_37:
    cmp byte [rsi], 0
    je loop_end_37
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_38:
    cmp byte [rsi], 0
    je loop_end_38
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_39:
    cmp byte [rsi], 0
    je loop_end_39
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_40:
    cmp byte [rsi], 0
    je loop_end_40
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_41:
    cmp byte [rsi], 0
    je loop_end_41
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_42:
    cmp byte [rsi], 0
    je loop_end_42
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_43:
    cmp byte [rsi], 0
    je loop_end_43
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_44:
    cmp byte [rsi], 0
    je loop_end_44
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_45:
    cmp byte [rsi], 0
    je loop_end_45
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_46:
    cmp byte [rsi], 0
    je loop_end_46
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_47:
    cmp byte [rsi], 0
    je loop_end_47
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_48:
    cmp byte [rsi], 0
    je loop_end_48
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_49:
    cmp byte [rsi], 0
    je loop_end_49
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_50:
    cmp byte [rsi], 0
    je loop_end_50
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_51:
    cmp byte [rsi], 0
    je loop_end_51
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_52:
    cmp byte [rsi], 0
    je loop_end_52
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_53:
    cmp byte [rsi], 0
    je loop_end_53
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_54:
    cmp byte [rsi], 0
    je loop_end_54
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_55:
    cmp byte [rsi], 0
    je loop_end_55
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_56:
    cmp byte [rsi], 0
    je loop_end_56
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_57:
    cmp byte [rsi], 0
    je loop_end_57
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_58:
    cmp byte [rsi], 0
    je loop_end_58
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_59:
    cmp byte [rsi], 0
    je loop_end_59
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_60:
    cmp byte [rsi], 0
    je loop_end_60
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_61:
    cmp byte [rsi], 0
    je loop_end_61
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_62:
    cmp byte [rsi], 0
    je loop_end_62
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_63:
    cmp byte [rsi], 0
    je loop_end_63
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_64:
    cmp byte [rsi], 0
    je loop_end_64
    add rsi, 1         ; >
    add byte [rsi], 14  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_65:
    cmp byte [rsi], 0
    je loop_end_65
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_66:
    cmp byte [rsi], 0
    je loop_end_66
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_67:
    cmp byte [rsi], 0
    je loop_end_67
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_68:
    cmp byte [rsi], 0
    je loop_end_68
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_69:
    cmp byte [rsi], 0
    je loop_end_69
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_70:
    cmp byte [rsi], 0
    je loop_end_70
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_71:
    cmp byte [rsi], 0
    je loop_end_71
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_72:
    cmp byte [rsi], 0
    je loop_end_72
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_73:
    cmp byte [rsi], 0
    je loop_end_73
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_74:
    cmp byte [rsi], 0
    je loop_end_74
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_75:
    cmp byte [rsi], 0
    je loop_end_75
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_76:
    cmp byte [rsi], 0
    je loop_end_76
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_77:
    cmp byte [rsi], 0
    je loop_end_77
    add rsi, 2         ; >
    add byte [rsi], 5  ; +
    ; Loop start
loop_start_78:
    cmp byte [rsi], 0
    je loop_end_78
    sub rsi, 1         ; <
    sub byte [rsi], 5  ; -
    add rsi, 1         ; >
    sub byte [rsi], 1  ; -
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_78
loop_end_78:
    sub rsi, 2         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_79:
    cmp byte [rsi], 0
    je loop_end_79
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_80:
    cmp byte [rsi], 0
    je loop_end_80
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_81:
    cmp byte [rsi], 0
    je loop_end_81
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_82:
    cmp byte [rsi], 0
    je loop_end_82
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_83:
    cmp byte [rsi], 0
    je loop_end_83
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_84:
    cmp byte [rsi], 0
    je loop_end_84
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_85:
    cmp byte [rsi], 0
    je loop_end_85
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_86:
    cmp byte [rsi], 0
    je loop_end_86
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_87:
    cmp byte [rsi], 0
    je loop_end_87
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_88:
    cmp byte [rsi], 0
    je loop_end_88
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_89:
    cmp byte [rsi], 0
    je loop_end_89
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_90:
    cmp byte [rsi], 0
    je loop_end_90
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_91:
    cmp byte [rsi], 0
    je loop_end_91
    add rsi, 1         ; >
    add byte [rsi], 14  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_92:
    cmp byte [rsi], 0
    je loop_end_92
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_93:
    cmp byte [rsi], 0
    je loop_end_93
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_94:
    cmp byte [rsi], 0
    je loop_end_94
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_95:
    cmp byte [rsi], 0
    je loop_end_95
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_96:
    cmp byte [rsi], 0
    je loop_end_96
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_97:
    cmp byte [rsi], 0
    je loop_end_97
    add rsi, 1         ; >
    add byte [rsi], 14  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_98:
    cmp byte [rsi], 0
    je loop_end_98
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_99:
    cmp byte [rsi], 0
    je loop_end_99
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_100:
    cmp byte [rsi], 0
    je loop_end_100
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_101:
    cmp byte [rsi], 0
    je loop_end_101
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_102:
    cmp byte [rsi], 0
    je loop_end_102
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_103:
    cmp byte [rsi], 0
    je loop_end_103
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_104:
    cmp byte [rsi], 0
    je loop_end_104
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_105:
    cmp byte [rsi], 0
    je loop_end_105
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_106:
    cmp byte [rsi], 0
    je loop_end_106
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_107:
    cmp byte [rsi], 0
    je loop_end_107
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_108:
    cmp byte [rsi], 0
    je loop_end_108
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_109:
    cmp byte [rsi], 0
    je loop_end_109
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_110:
    cmp byte [rsi], 0
    je loop_end_110
    add rsi, 2         ; >
    add byte [rsi], 5  ; +
    ; Loop start
loop_start_111:
    cmp byte [rsi], 0
    je loop_end_111
    sub rsi, 1         ; <
    sub byte [rsi], 5  ; -
    add rsi, 1         ; >
    sub byte [rsi], 1  ; -
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_111
loop_end_111:
    sub rsi, 2         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_112:
    cmp byte [rsi], 0
    je loop_end_112
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_113:
    cmp byte [rsi], 0
    je loop_end_113
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_114:
    cmp byte [rsi], 0
    je loop_end_114
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_115:
    cmp byte [rsi], 0
    je loop_end_115
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_116:
    cmp byte [rsi], 0
    je loop_end_116
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_117:
    cmp byte [rsi], 0
    je loop_end_117
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_118:
    cmp byte [rsi], 0
    je loop_end_118
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_119:
    cmp byte [rsi], 0
    je loop_end_119
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_120:
    cmp byte [rsi], 0
    je loop_end_120
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_121:
    cmp byte [rsi], 0
    je loop_end_121
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_122:
    cmp byte [rsi], 0
    je loop_end_122
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_123:
    cmp byte [rsi], 0
    je loop_end_123
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_124:
    cmp byte [rsi], 0
    je loop_end_124
    add rsi, 1         ; >
    add byte [rsi], 14  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop start
loop_start_125:
    cmp byte [rsi], 0
    je loop_end_125
    add rsi, 1         ; >
    add byte [rsi], 1  ; +
    sub rsi, 1         ; <
    sub byte [rsi], 1  ; -
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_125
loop_end_125:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_124
loop_end_124:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_123
loop_end_123:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_122
loop_end_122:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_121
loop_end_121:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_120
loop_end_120:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_119
loop_end_119:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_118
loop_end_118:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_117
loop_end_117:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_116
loop_end_116:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_115
loop_end_115:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_114
loop_end_114:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_113
loop_end_113:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_112
loop_end_112:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_110
loop_end_110:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_109
loop_end_109:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_108
loop_end_108:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_107
loop_end_107:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_106
loop_end_106:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_105
loop_end_105:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_104
loop_end_104:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_103
loop_end_103:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_102
loop_end_102:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_101
loop_end_101:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_100
loop_end_100:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_99
loop_end_99:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_98
loop_end_98:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_97
loop_end_97:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_96
loop_end_96:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_95
loop_end_95:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_94
loop_end_94:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_93
loop_end_93:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_92
loop_end_92:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_91
loop_end_91:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_90
loop_end_90:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_89
loop_end_89:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_88
loop_end_88:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_87
loop_end_87:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_86
loop_end_86:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_85
loop_end_85:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_84
loop_end_84:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_83
loop_end_83:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_82
loop_end_82:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_81
loop_end_81:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_80
loop_end_80:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_79
loop_end_79:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_77
loop_end_77:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_76
loop_end_76:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_75
loop_end_75:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_74
loop_end_74:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_73
loop_end_73:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_72
loop_end_72:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_71
loop_end_71:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_70
loop_end_70:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_69
loop_end_69:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_68
loop_end_68:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_67
loop_end_67:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_66
loop_end_66:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_65
loop_end_65:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_64
loop_end_64:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_63
loop_end_63:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_62
loop_end_62:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_61
loop_end_61:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_60
loop_end_60:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_59
loop_end_59:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_58
loop_end_58:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_57
loop_end_57:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_56
loop_end_56:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_55
loop_end_55:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_54
loop_end_54:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_53
loop_end_53:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_52
loop_end_52:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_51
loop_end_51:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_50
loop_end_50:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_49
loop_end_49:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_48
loop_end_48:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_47
loop_end_47:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_46
loop_end_46:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_45
loop_end_45:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_44
loop_end_44:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_43
loop_end_43:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_42
loop_end_42:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_41
loop_end_41:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_40
loop_end_40:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_39
loop_end_39:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_38
loop_end_38:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_37
loop_end_37:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_36
loop_end_36:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_35
loop_end_35:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_34
loop_end_34:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_33
loop_end_33:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_32
loop_end_32:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_31
loop_end_31:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_30
loop_end_30:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_29
loop_end_29:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_28
loop_end_28:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_27
loop_end_27:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_26
loop_end_26:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_25
loop_end_25:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_24
loop_end_24:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_23
loop_end_23:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_22
loop_end_22:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_21
loop_end_21:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_20
loop_end_20:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_19
loop_end_19:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_18
loop_end_18:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_17
loop_end_17:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_16
loop_end_16:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_15
loop_end_15:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_14
loop_end_14:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_13
loop_end_13:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_12
loop_end_12:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_11
loop_end_11:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_10
loop_end_10:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_9
loop_end_9:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_8
loop_end_8:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_7
loop_end_7:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_6
loop_end_6:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_5
loop_end_5:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_4
loop_end_4:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_3
loop_end_3:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_2
loop_end_2:
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_1
loop_end_1:
    add rsi, 1         ; >
    ; Output current cell
    mov rax, 1        ; sys_write
    mov rdi, 1        ; stdout
    mov rdx, 1        ; count
    syscall
    ; Loop start
loop_start_126:
    cmp byte [rsi], 0
    je loop_end_126
    sub byte [rsi], 1  ; -
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_126
loop_end_126:
    sub rsi, 1         ; <
    ; Input to current cell
    mov rax, 0        ; sys_read
    mov rdi, 0        ; stdin
    mov rdx, 1        ; count
    syscall
    ; Loop end
    cmp byte [rsi], 0
    jne loop_start_0
loop_end_0:

    ; Exit program
    mov rax, 60       ; sys_exit
    xor rdi, rdi       ; status 0
    syscall
